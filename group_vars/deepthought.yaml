---

# ironicbadger.figurine
figurine_name: deep-thought

# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: dnsutils
  - name: fio
  - name: git
  #- name: hddtemp #https://raw.githubusercontent.com/slowpeek/hddtemp/master/hddtemp-lt
  - name: htop
  - name: ffmpeg
  - name: iftop
  - name: intel-gpu-tools
  - name: iotop
  - name: ipmitool
  - name: lm-sensors
  - name: mc
  - name: mergerfs
  - name: molly-guard
  - name: ncdu
  - name: net-tools
  - name: nfs-kernel-server
  - name: nmap
  - name: nvme-cli
  - name: openssh-server
  - name: python3
  - name: python3-setuptools
  - name: sanoid
  - name: screen
  - name: smartmontools
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  - name: xfsprogs
  - name: zfsutils-linux

# ironicbadger.docker_compose_generator
appdata_path: /mnt/appdata
download_path: /mnt/downloads
storage_path: /mnt/storage
wd_domain_me: "wd.{{ domain_me }}"
dt_domain_me: "dt.{{ wd_domain_me }}"

containers:
  ### Administrative
  ###
  - service_name: tr
    active: true
    image: traefik
    container_name: tr
    labels:
      - traefik.enable=false
    ports:
      - 80:80
      - 443:443
    command:
      - --log.level=info
      - --accesslog=false
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - "{{ appdata_path }}/apps/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped

  ### Data Services
  ###
  - service_name: nextcloud
    active: true
    image: nextcloud:28
    devices:
      - /dev/dri:/dev/dri
    depends_on:
      - mysql
      - redisnc
    environment:
      - REDIS_HOST=redisnc
    labels:
      - traefik.enable=true
      - "traefik.http.routers.nc.rule=Host(`nc.{{ domain_cloud }}`)"
    volumes:
      - "{{ appdata_path }}/apps/nextcloud:/var/www/html"
    restart: unless-stopped
  - service_name: mysql
    active: true
    image: mariadb
    ports:
      - 3306:3306
    environment:
      - "MYSQL_ROOT_PASSWORD={{ container_mysql_root_password }}"
      - "MYSQL_PASSWORD={{ container_mysql_password }}"
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    volumes:
      - "{{ appdata_path }}/databases/mysql:/var/lib/mysql"
    restart: unless-stopped
  - service_name: redisnc
    active: true
    image: redis:alpine
    restart: unless-stopped
  ###
  - service_name: gitea
    active: false
    image: gitea/gitea
    depends_on:
      - mysql
    environment:
      - "USER_UID={{ main_uid }}"
      - "USER_GID={{ main_gid }}"
      - "ROOT_URL=https://git.{{ domain_me }}"
      - "SSH_DOMAIN=git.{{ domain_me }}"
      - "APP_NAME=git.{{ domain_me }}"
      - "SSH_PORT=2222"
      - "DISABLE_REGISTRATION=true"
      - "REQUIRE_SIGNIN_VIEW=true"
      - TZ=America/New_York
      #- "ALLOWED_HOST_LIST=drone.m.wd.ktz.me"
    volumes:
      - "{{ appdata_path }}/apps/gitea:/data"
    labels:
      - "traefik.http.routers.git.rule=Host(`git.{{ domain_me }}`)"
      - traefik.http.services.git.loadbalancer.server.port=3000
    ports:
      - '"2222:2222"'
    restart: unless-stopped
  - service_name: gitea-runner
    active: false
    image: gitea/act_runner:nightly
    depends_on:
      - gitea
    environment:
      - "GITEA_INSTANCE_URL=https://git.{{ domain_me }}"
      - "GITEA_RUNNER_REGISTRATION_TOKEN={{ gitea_runner_act_token }}"
      - GITEA_RUNNER_NAME=morpheus-docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
  ###
  - service_name: ninja_nginx
    active: false
    image: nginx
    labels:
      - "traefik.http.routers.ninja.rule=Host(`ninja.{{ dt_domain_me }}`)"
    volumes:
      - "{{ appdata_path }}/apps/invoiceninja/ninja.conf:/etc/nginx/conf.d/default.conf:ro"
      - "{{ appdata_path }}/apps/invoiceninja/storage:/var/www/app/storage"
      - "{{ appdata_path }}/apps/invoiceninja/public/logo:/var/www/app/logo"
      - "{{ appdata_path }}/apps/invoiceninja/public:/var/www/app/public"
    restart: unless-stopped
  - service_name: invoiceninja
    active: false
    image: invoiceninja/invoiceninja:4.5.18
    depends_on:
      - mysql
      - ninja_nginx
    volumes:
      - "{{ appdata_path }}/apps/invoiceninja/storage:/var/www/app/storage"
      - "{{ appdata_path }}/apps/invoiceninja/public/logo:/var/www/app/logo"
      - "{{ appdata_path }}/apps/invoiceninja/public:/var/www/app/public"
    environment:
      - MYSQL_DATABASE=ninja
      - "MYSQL_ROOT_PASSWORD={{ container_mysql_password}}"
      - APP_DEBUG=0
      - "APP_URL={{ invoice_ninja_app_url }}"
      - "APP_KEY={{ invoice_ninja_app_key }}"
      - APP_CIPHER=AES-256-CBC
      - DB_USERNAME=root
      - "DB_PASSWORD={{ container_mysql_password}}"
      - DB_HOST=mysql
      - DB_DATABASE=ninja
      - MAIL_HOST=smtp.gmail.com
      - "MAIL_USERNAME={{ gmail_address }}"
      - "MAIL_PASSWORD={{ invoice_ninja_gmail_app_password }}"
      - MAIL_DRIVER=smtp
      - MAIL_FROM_NAME="Alex K"
      - "MAIL_FROM_ADDRESS={{ gmail_address }}"
      - REQUIRE_HTTPS=true
      - "TRUSTED_PROXIES='*'"
    restart: unless-stopped
###
  - service_name: mealie
    active: false
    image: hkotel/mealie:v0.5.1
    labels:
      - traefik.http.routers.mealie.rule=Host(`mealie.{{ dt_domain_me }}`)
    environment:
      - DB_TYPE=sqlite
    volumes:
      - "{{ appdata_path }}/apps/mealie:/app/data"
    restart: unless-stopped
###
  - service_name: freshrss
    active: false
    image: lscr.io/linuxserver/freshrss:latest
    labels:
      - traefik.enable=true
      - "traefik.http.routers.freshrss.rule=Host(`freshrss.{{ dt_domain_me }}`)"
    volumes:
      - "{{ appdata_path }}/apps/freshrss:/config"
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: wallabag
    active: false
    image: wallabag/wallabag
    labels:
      - "traefik.http.routers.wallabag.rule=Host(`wallabag.{{ dt_domain_me }}`)"
    environment:
      - "SYMFONY__ENV__DOMAIN_NAME=https://wallabag.{{ dt_domain_me }}"
      - "SYMFONY__ENV__DATABASE_DRIVER=pdo_sqlite"
    volumes:
      - "{{ appdata_path }}/apps/wallabag:/var/www/wallabag/data"
    include_global_env_vars: false
    restart: unless-stopped
###
  - service_name: stirlingpdf
    active: false
    image: frooodle/s-pdf:latest
    labels:
      - "traefik.http.routers.stirling.rule=Host(`pdf.{{ dt_domain_me }}`)"
    volumes:
      - "{{ appdata_path }}/apps/stirlingpdf/configs:/configs"
      - "{{ appdata_path }}/apps/stirlingpdf/ocr-data:/usr/share/tesseract-ocr/5/tessdata"
    environment:
      - DOCKER_ENABLE_SECURITY=false
    include_global_env_vars: false
    restart: unless-stopped

  ### Monitoring
  ###
  - service_name: smokeping
    active: true
    image: lscr.io/linuxserver/smokeping
    hostname: deep-thought
    volumes:
      - "{{ appdata_path }}/databases/smokeping/config:/config"
      - "{{ appdata_path }}/databases/smokeping/data:/data"
    labels:
      - "traefik.http.routers.smokeping.rule=Host(`smokeping.{{ dt_domain_me }}`)"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: prometheus-igpu
    active: false
    image: restreamio/intel-prometheus
    ports:
      - 9101:8080
    devices:
      - /dev/dri:/dev/dri
    include_global_env_vars: false
    restart: unless-stopped
  ###
  - service_name: librespeed
    active: true
    image: lscr.io/linuxserver/librespeed
    ports:
      - 8008:80
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ librespeed_password }}"
    include_global_env_vars: true
    restart: unless-stopped